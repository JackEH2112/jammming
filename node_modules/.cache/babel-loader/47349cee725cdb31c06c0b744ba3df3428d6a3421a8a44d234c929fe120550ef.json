{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tracklist from './Tracklist';\nimport Playlist from './Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SearchResults(props) {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    'songName': 'Something For Nothing',\n    'artist': 'Rush',\n    'album': '2112',\n    'id': '0',\n    /*Replace me with .utilities generate function when written*/\n    'playlist': false\n  }, {\n    'songName': 'Knights of Cydonia',\n    'artist': 'Muse',\n    'album': 'Black Holes and Revelations',\n    'id': '10',\n    /*Replace me with .utilities generate function when written*/\n    'playlist': false\n  }, {\n    'songName': 'Lovers Leap',\n    'artist': 'Elbow',\n    'album': 'Lovers Leap',\n    'id': '20',\n    'playlist': false\n  }]);\n  const [playlist, setPlaylist] = useState([]);\n  const addToPlaylist = track => {\n    let playlistChecker = track.songName;\n    playlist.find(track => track.songName === playlistChecker);\n    if (playlist.find(track => track.songName === playlistChecker)) {\n      alert(track.songName + ' is already in playlist!');\n    } else {\n      let newId = track.id + 10; /*Replace me with .utilities generate function when written*/\n      const newTrack = {\n        songName: track.songName,\n        artist: track.artist,\n        album: track.album,\n        id: newId,\n        playlist: true\n      };\n      setPlaylist(playlist => [...playlist, newTrack]);\n    }\n  };\n  const removeFromPlaylist = trackToRemove => {\n    setPlaylist(playlist => playlist.filter(track => track.id !== trackToRemove.id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tracklist, {\n      searchResults: searchResults,\n      addToPlaylist: addToPlaylist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n      removeFromPlaylist: removeFromPlaylist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SearchResults, \"SoI8K6nrGcTeGshagAvG3IxqMdA=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","Tracklist","Playlist","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchResults","props","_s","searchResults","setSearchResults","playlist","setPlaylist","addToPlaylist","track","playlistChecker","songName","find","alert","newId","id","newTrack","artist","album","removeFromPlaylist","trackToRemove","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/SearchResults.js"],"sourcesContent":["import React, {useState} from 'react'\nimport Tracklist from './Tracklist';\nimport Playlist from './Playlist';\n\nfunction SearchResults(props) {\n    const [searchResults, setSearchResults] = useState([\n        {\n        'songName' : 'Something For Nothing',\n        'artist' : 'Rush', \n        'album' : '2112',\n        'id' : '0', /*Replace me with .utilities generate function when written*/\n        'playlist' : false},\n        {\n        'songName' : 'Knights of Cydonia',\n        'artist' : 'Muse',\n        'album' : 'Black Holes and Revelations',\n        'id' : '10', /*Replace me with .utilities generate function when written*/\n        'playlist' : false},\n        {\n        'songName' : 'Lovers Leap',\n        'artist' : 'Elbow',\n        'album' : 'Lovers Leap',\n        'id' : '20',\n        'playlist' : false}\n    ])\n\n    const [playlist, setPlaylist] = useState([]);\n\n    const addToPlaylist = (track) => {\n        let playlistChecker = track.songName;\n        playlist.find((track) => track.songName === playlistChecker)\n        if(playlist.find((track) => track.songName === playlistChecker)){\n            alert(track.songName + ' is already in playlist!')\n        }\n        else{\n            let newId = track.id+10; /*Replace me with .utilities generate function when written*/\n            const newTrack = {\n                songName: track.songName,\n                artist: track.artist,\n                album: track.album,\n                id: newId,\n                playlist: true\n            }\n            setPlaylist(playlist => [...playlist, newTrack])\n        }\n    }\n    const removeFromPlaylist = (trackToRemove) => {\n        setPlaylist((playlist) => \n            playlist.filter((track) => track.id !== trackToRemove.id))\n    }\n\n    return (\n        <>\n            <Tracklist \n                searchResults={searchResults}\n                addToPlaylist={addToPlaylist}\n            />\n            <Playlist\n                removeFromPlaylist={removeFromPlaylist}\n            />\n        </>\n    )\n}\n\nexport default SearchResults;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAC/C;IACA,UAAU,EAAG,uBAAuB;IACpC,QAAQ,EAAG,MAAM;IACjB,OAAO,EAAG,MAAM;IAChB,IAAI,EAAG,GAAG;IAAE;IACZ,UAAU,EAAG;EAAK,CAAC,EACnB;IACA,UAAU,EAAG,oBAAoB;IACjC,QAAQ,EAAG,MAAM;IACjB,OAAO,EAAG,6BAA6B;IACvC,IAAI,EAAG,IAAI;IAAE;IACb,UAAU,EAAG;EAAK,CAAC,EACnB;IACA,UAAU,EAAG,aAAa;IAC1B,QAAQ,EAAG,OAAO;IAClB,OAAO,EAAG,aAAa;IACvB,IAAI,EAAG,IAAI;IACX,UAAU,EAAG;EAAK,CAAC,CACtB,CAAC;EAEF,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,aAAa,GAAIC,KAAK,IAAK;IAC7B,IAAIC,eAAe,GAAGD,KAAK,CAACE,QAAQ;IACpCL,QAAQ,CAACM,IAAI,CAAEH,KAAK,IAAKA,KAAK,CAACE,QAAQ,KAAKD,eAAe,CAAC;IAC5D,IAAGJ,QAAQ,CAACM,IAAI,CAAEH,KAAK,IAAKA,KAAK,CAACE,QAAQ,KAAKD,eAAe,CAAC,EAAC;MAC5DG,KAAK,CAACJ,KAAK,CAACE,QAAQ,GAAG,0BAA0B,CAAC;IACtD,CAAC,MACG;MACA,IAAIG,KAAK,GAAGL,KAAK,CAACM,EAAE,GAAC,EAAE,CAAC,CAAC;MACzB,MAAMC,QAAQ,GAAG;QACbL,QAAQ,EAAEF,KAAK,CAACE,QAAQ;QACxBM,MAAM,EAAER,KAAK,CAACQ,MAAM;QACpBC,KAAK,EAAET,KAAK,CAACS,KAAK;QAClBH,EAAE,EAAED,KAAK;QACTR,QAAQ,EAAE;MACd,CAAC;MACDC,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEU,QAAQ,CAAC,CAAC;IACpD;EACJ,CAAC;EACD,MAAMG,kBAAkB,GAAIC,aAAa,IAAK;IAC1Cb,WAAW,CAAED,QAAQ,IACjBA,QAAQ,CAACe,MAAM,CAAEZ,KAAK,IAAKA,KAAK,CAACM,EAAE,KAAKK,aAAa,CAACL,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,oBACIjB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA,CAACH,SAAS;MACNS,aAAa,EAAEA,aAAc;MAC7BI,aAAa,EAAEA;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF5B,OAAA,CAACF,QAAQ;MACLuB,kBAAkB,EAAEA;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA,eACJ,CAAC;AAEX;AAACvB,EAAA,CA1DQF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA4DtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}