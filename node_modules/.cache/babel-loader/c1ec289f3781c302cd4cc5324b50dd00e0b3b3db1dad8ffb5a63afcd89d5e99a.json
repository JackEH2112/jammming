{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Track from \"./Track\";\nimport './Playlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist(props) {\n  _s();\n  const {\n    playlist,\n    removeFromPlaylist,\n    token\n  } = props;\n  const [playlistName, setPlayListName] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const uriArray = [];\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (playlistName === '') {\n      alert('Must have a playlist name!');\n    } else if (playlist.length === 0) {\n      alert('No tracks in playlist');\n    } else if (!token) {\n      alert('You need to be logged in to upload playlists to Spotify');\n    } else {\n      //get user id\n      const responseUserId = await axios.get('https://api.spotify.com/v1/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const USER_ID = responseUserId.data.id;\n      //Get track uris\n      for (let i = 0; i < playlist.length; i++) {\n        uriArray.push(playlist[i].uri);\n      }\n      //Upload playlist to Spotify\n      await axios({\n        method: 'post',\n        url: `https://api.spotify.com/v1/users/${USER_ID}/playlists`,\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        data: {\n          'name': `${playlistName}`,\n          'description': 'Playlist created with JAMMMING app',\n          'public': false\n        }\n      }).then(async function (response) {\n        //post tracks\n        await axios({\n          method: 'post',\n          url: `https://api.spotify.com/v1/playlists/${response.data.id}/tracks`,\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          data: {\n            'uris': [`${uriArray.map(song => song)}`]\n          }\n        }).then(function (response) {\n          console.log(response);\n          //reset\n          alert(`Upload ${playlistName} successful`);\n          setPlaylists(playlists => [...playlists, playlistName]);\n          setPlayListName('');\n          playlist.splice(0);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"heading\",\n        onChange: e => setPlayListName(e.target.value),\n        value: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist === null || playlist === void 0 ? void 0 : playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          trackIsInPlaylist: true,\n          track: track,\n          removeFromPlaylist: () => {\n            removeFromPlaylist(track);\n          }\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"heading\",\n        type: \"submit\",\n        children: \"Upload My Jammms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading\",\n      children: \"Saved Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists === null || playlists === void 0 ? void 0 : playlists.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Playlist, \"wnBSdSZ6qdQWzI4gW4KiufbuhN0=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","axios","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","props","_s","playlist","removeFromPlaylist","token","playlistName","setPlayListName","playlists","setPlaylists","uriArray","handleSubmit","e","preventDefault","alert","length","responseUserId","get","headers","Authorization","USER_ID","data","id","i","push","uri","method","url","then","response","map","song","console","log","splice","catch","error","children","onSubmit","className","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","track","trackIsInPlaylist","type","pl","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport Track from \"./Track\";\nimport './Playlist.css'\n\nfunction Playlist(props) {\n    const {playlist, removeFromPlaylist, token} = props;\n\n    const [playlistName, setPlayListName] = useState('')\n    const [playlists, setPlaylists] = useState([])\n    const uriArray = [];\n    \n    async function handleSubmit(e) {\n        e.preventDefault();\n        if(playlistName === ''){\n            alert('Must have a playlist name!')\n        }\n        else if(playlist.length === 0){\n            alert('No tracks in playlist')\n        }\n        else if(!token){\n            alert('You need to be logged in to upload playlists to Spotify')\n        }\n        else{\n            //get user id\n            const responseUserId = await axios.get ('https://api.spotify.com/v1/me', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            const USER_ID = responseUserId.data.id;\n            //Get track uris\n            for (let i = 0; i < playlist.length; i++){\n                uriArray.push(playlist[i].uri)\n            }\n            //Upload playlist to Spotify\n            await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/users/${USER_ID}/playlists`,\n                headers: {'Authorization': `Bearer ${token}`},\n                data: {\n                    'name': `${playlistName}`,\n                    'description': 'Playlist created with JAMMMING app',\n                    'public': false\n                }\n            })\n            .then(async function (response) {\n                //post tracks\n                await axios({\n                    method: 'post',\n                    url: `https://api.spotify.com/v1/playlists/${response.data.id}/tracks`,\n                    headers: {'Authorization' : `Bearer ${token}`},\n                    data: {\n                        'uris' : [`${uriArray.map((song) => (song))}`]\n                    }\n                })\n                .then(function (response) {\n                    console.log(response)  \n                    //reset\n                    alert(`Upload ${playlistName} successful`)\n                    setPlaylists(playlists => [...playlists, playlistName])\n                    setPlayListName('')\n                    playlist.splice(0)\n                })\n                .catch(function (error) {\n                    console.log(error)\n                })  \n            })\n            .catch(function (error) {\n                console.log(error);\n                alert(error)\n            });\n        }\n    }\n\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input \n                    className='heading'\n                    onChange={(e) => setPlayListName(e.target.value)}\n                    value={playlistName}\n                />\n                <ul>\n                    {playlist?.map((track) => (\n                        <Track\n                            trackIsInPlaylist = {true}\n                            key={track.id}\n                            track={track}\n                            removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        />\n                    ))}\n                </ul>\n                <button className='heading' type=\"submit\">\n                    Upload My Jammms!\n                </button>\n            </form>\n            {/*add functionality to be able to change playlist names*/}\n            <h3 className='heading'>Saved Playlists</h3>\n            <ul>\n                {playlists?.map((pl) => (\n                    <li>\n                        {pl}\n                    </li>\n                ))}\n            </ul>\n            \n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}