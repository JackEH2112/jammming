{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist(props) {\n  _s();\n  const {\n    searchResults,\n    playlist,\n    removeFromPlaylist,\n    trackIsInPlaylist\n  } = props;\n  const [playlistName, setPlayListName] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (playlistName === '') {\n      alert('Must have a playlist name!');\n    } else if (playlist.length === 0) {\n      alert('No tracks in playlist');\n    } else {\n      //Save the new playlist\n      setPlaylists(playlists => [...playlists, playlistName]);\n      const newUriPlaylist = [];\n      for (let i = 0; i < playlist.length; i++) {\n        //need function for taking song name and creating uri code - placeholder code\n        const playlistUri = playlist[i];\n        //add uri code to array for Spotify api\n        newUriPlaylist.push(playlistUri);\n      }\n      alert(`Upload ${playlistName} successful`);\n      setPlayListName('');\n      playlist.splice(0);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setPlayListName(e.target.value),\n        value: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist === null || playlist === void 0 ? void 0 : playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          track: searchResults.track,\n          trackIsInPlaylist: trackIsInPlaylist,\n          removeFromPlaylist: () => {\n            removeFromPlaylist(searchResults.track);\n          }\n        }, searchResults.track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload My Jammms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists === null || playlists === void 0 ? void 0 : playlists.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Playlist, \"wnBSdSZ6qdQWzI4gW4KiufbuhN0=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","props","_s","searchResults","playlist","removeFromPlaylist","trackIsInPlaylist","playlistName","setPlayListName","playlists","setPlaylists","handleSubmit","e","preventDefault","alert","length","newUriPlaylist","i","playlistUri","push","splice","children","onSubmit","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","track","id","type","pl","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\n\nfunction Playlist(props) {\n    const {searchResults, playlist, removeFromPlaylist, trackIsInPlaylist} = props;\n\n    const [playlistName, setPlayListName] = useState('')\n    const [playlists, setPlaylists] = useState([])\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        if(playlistName === ''){\n            alert('Must have a playlist name!')\n        }\n        else if(playlist.length === 0){\n            alert('No tracks in playlist')\n        }\n        else{\n            //Save the new playlist\n            setPlaylists(playlists => [...playlists, playlistName])\n            const newUriPlaylist = []\n            for (let i = 0; i < playlist.length; i++){\n                //need function for taking song name and creating uri code - placeholder code\n                const playlistUri = playlist[i]\n                //add uri code to array for Spotify api\n                newUriPlaylist.push(playlistUri)\n            }\n            alert(`Upload ${playlistName} successful`)\n            setPlayListName('')\n            playlist.splice(0)\n        }\n    }\n\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input \n                    onChange={(e) => setPlayListName(e.target.value)}\n                    value={playlistName}\n                />\n                <ul>\n                    {playlist?.map((track) => (\n                        <Track\n                            key={searchResults.track.id}\n                            track={searchResults.track}\n                            trackIsInPlaylist={trackIsInPlaylist}\n                            removeFromPlaylist={() => {removeFromPlaylist(searchResults.track)}} \n                        />\n                    ))}\n                </ul>\n                <button type=\"submit\">\n                    Upload My Jammms!\n                </button>\n            </form>\n            {/*add functionality to be able to change playlist names*/}\n            <ul>\n                {playlists?.map((pl) => (\n                    <li>\n                        {pl}\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}