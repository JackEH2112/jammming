{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tracklist() {\n  _s();\n  const [tracklist, setTracklist] = useState([{\n    'songName': 'Something For Nothing',\n    'artist': 'Rush',\n    'album': '2112',\n    'id': '0',\n    /*Replace me with .utilities generate function when written*/\n    'playlist': false\n  }, {\n    'songName': 'Knights of Cydonia',\n    'artist': 'Muse',\n    'album': 'Black Holes and Revelations',\n    'id': '10',\n    'playlist': false\n  }]);\n  const [playlist, setPlaylist] = useState([]);\n  const addToPlaylist = track => {\n    if (playlist.find(track => track == track)) {\n      alert(track.songName + ' is already in playlist!');\n    } else {\n      alert('Starting new track for playlist');\n      console.log(track.songName);\n      let newId = track.id + 10;\n      const newTrack = {\n        songName: track.songName,\n        artist: track.artist,\n        album: track.album,\n        id: newId,\n        playlist: true\n      };\n      console.log(newTrack);\n      setPlaylist(playlist => [...playlist, newTrack]);\n    }\n  };\n  const removeFromPlaylist = trackToRemove => {\n    setPlaylist(playlist => playlist.filter(track => track.id !== trackToRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tracklist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        addToPlaylist: () => {\n          addToPlaylist(track);\n        }\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        removeFromPlaylist: () => {\n          removeFromPlaylist(track);\n        }\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Tracklist, \"kwkHb62nEAX4d3eeU8ySBOp+LRk=\");\n_c = Tracklist;\nexport default Tracklist;\nvar _c;\n$RefreshReg$(_c, \"Tracklist\");","map":{"version":3,"names":["React","useState","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Tracklist","_s","tracklist","setTracklist","playlist","setPlaylist","addToPlaylist","track","find","alert","songName","console","log","newId","id","newTrack","artist","album","removeFromPlaylist","trackToRemove","filter","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\n\nfunction Tracklist() {\n\n    const [tracklist, setTracklist] = useState([{\n        'songName' : 'Something For Nothing',\n        'artist' : 'Rush', \n        'album' : '2112',\n        'id' : '0', /*Replace me with .utilities generate function when written*/\n        'playlist' : false},\n        {\n        'songName' : 'Knights of Cydonia',\n        'artist' : 'Muse',\n        'album' : 'Black Holes and Revelations',\n        'id' : '10',\n        'playlist' : false}\n    ]);\n\n    const [playlist, setPlaylist] = useState([]);\n\n    const addToPlaylist = (track) => {\n        if(playlist.find((track) => track == track)){\n            alert(track.songName + ' is already in playlist!')\n        }\n        else{\n            alert('Starting new track for playlist')\n            console.log(track.songName)\n            let newId = track.id+10;\n            const newTrack = {\n                songName: track.songName,\n                artist: track.artist,\n                album: track.album,\n                id: newId,\n                playlist: true\n            }\n            console.log(newTrack);\n            setPlaylist(playlist => [...playlist, newTrack])\n        }\n    }\n\n    const removeFromPlaylist = (trackToRemove) => {\n        setPlaylist((playlist) => playlist.filter((track) => track.id !== trackToRemove))\n    }\n\n    return (\n        <>\n            <ul>\n                {tracklist.map((track) => (\n                    <Track \n                        key={track.id}\n                        track={track}\n                        addToPlaylist={() => {addToPlaylist(track)}}\n                         />\n                )\n                )}\n            </ul>\n            <ul>\n                {playlist.map((track) => (\n                    <Track\n                        key={track.id}\n                        track={track}\n                        removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        />\n                )\n                )}\n            </ul>\n        </>\n\n    )\n}\n\nexport default Tracklist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}