{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Track from \"./Track\";\nimport './Playlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist(props) {\n  _s();\n  const {\n    playlist,\n    removeFromPlaylist,\n    token\n  } = props;\n  const [playlistName, setPlayListName] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const newUriPlaylist = [];\n  const [playlistId, setPlayistId] = useState('');\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (playlistName === '') {\n      alert('Must have a playlist name!');\n    } else if (playlist.length === 0) {\n      alert('No tracks in playlist');\n    } else if (!token) {\n      alert('You need to be logged in to upload playlists to Spotify');\n    } else {\n      //get user id\n      const responseUserId = await axios.get('https://api.spotify.com/v1/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const USER_ID = responseUserId.data.id;\n      //Get track URIs\n      for (let i = 0; i < playlist.length; i++) {\n        const playlistUri = playlist[i].uri;\n        newUriPlaylist.push(playlistUri);\n      }\n      //Upload playlist to Spotify\n      await axios({\n        method: 'post',\n        url: `https://api.spotify.com/v1/users/${USER_ID}/playlists`,\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        data: {\n          'name': `${playlistName}`,\n          'description': 'Playlist created with JAMMMING app',\n          'public': false\n        }\n      })\n      //Post tracks to playlist\n      .then(function (response) {\n        //get playlist id\n        setPlayistId(response.data.id);\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n      //post tracks\n      await axios({\n        method: 'post',\n        url: `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n        headers: {\n          'Authorization': `Bearer${token}`\n        },\n        uris: [`${newUriPlaylist}`]\n      }).then(function (response) {\n        console.log(response);\n        //reset\n        alert(`Upload ${playlistName} successful`);\n        setPlaylists(playlists => [...playlists, playlistName]);\n        setPlayListName('');\n        playlist.splice(0);\n        newUriPlaylist.splice(0);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"heading\",\n        onChange: e => setPlayListName(e.target.value),\n        value: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist === null || playlist === void 0 ? void 0 : playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          trackIsInPlaylist: true,\n          track: track,\n          removeFromPlaylist: () => {\n            removeFromPlaylist(track);\n          }\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"heading\",\n        type: \"submit\",\n        children: \"Upload My Jammms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"heading\",\n      children: \"Saved Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists === null || playlists === void 0 ? void 0 : playlists.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Playlist, \"v3Q8ZG2DtGTc/7hxG5dj+GuBNlg=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","axios","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","props","_s","playlist","removeFromPlaylist","token","playlistName","setPlayListName","playlists","setPlaylists","newUriPlaylist","playlistId","setPlayistId","handleSubmit","e","preventDefault","alert","length","responseUserId","get","headers","Authorization","USER_ID","data","id","i","playlistUri","uri","push","method","url","then","response","catch","error","console","log","uris","splice","children","onSubmit","class","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","track","trackIsInPlaylist","type","pl","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport Track from \"./Track\";\nimport './Playlist.css'\n\nfunction Playlist(props) {\n    const {playlist, removeFromPlaylist, token} = props;\n\n    const [playlistName, setPlayListName] = useState('')\n    const [playlists, setPlaylists] = useState([])\n    const newUriPlaylist = [];\n    const [playlistId, setPlayistId] = useState('')\n    \n    async function handleSubmit(e) {\n        e.preventDefault();\n        if(playlistName === ''){\n            alert('Must have a playlist name!')\n        }\n        else if(playlist.length === 0){\n            alert('No tracks in playlist')\n        }\n        else if(!token){\n            alert('You need to be logged in to upload playlists to Spotify')\n        }\n        else{\n            //get user id\n            const responseUserId = await axios.get ('https://api.spotify.com/v1/me', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            const USER_ID = responseUserId.data.id;\n            //Get track URIs\n            for (let i = 0; i < playlist.length; i++){\n                const playlistUri = playlist[i].uri;\n                newUriPlaylist.push(playlistUri)\n            }\n            //Upload playlist to Spotify\n            await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/users/${USER_ID}/playlists`,\n                headers: {'Authorization': `Bearer ${token}`},\n                data: {\n                    'name': `${playlistName}`,\n                    'description': 'Playlist created with JAMMMING app',\n                    'public': false\n                }\n            })\n            //Post tracks to playlist\n            .then(function (response) {\n                //get playlist id\n                setPlayistId(response.data.id)           \n            })\n            .catch(function (error) {\n                console.log(error);\n                alert(error)\n            });\n            //post tracks\n            await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n                headers: {'Authorization' : `Bearer${token}`},\n                uris: [`${newUriPlaylist}`]\n            })\n            .then(function (response) {\n                console.log(response)\n                //reset\n                alert(`Upload ${playlistName} successful`)\n                setPlaylists(playlists => [...playlists, playlistName])\n                setPlayListName('')\n                playlist.splice(0)\n                newUriPlaylist.splice(0) \n            })\n            .catch(function (error) {\n                console.log(error)\n            })   \n        }\n    }\n\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input \n                    class='heading'\n                    onChange={(e) => setPlayListName(e.target.value)}\n                    value={playlistName}\n                />\n                <ul>\n                    {playlist?.map((track) => (\n                        <Track\n                            trackIsInPlaylist = {true}\n                            key={track.id}\n                            track={track}\n                            removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        />\n                    ))}\n                </ul>\n                <button class='heading' type=\"submit\">\n                    Upload My Jammms!\n                </button>\n            </form>\n            {/*add functionality to be able to change playlist names*/}\n            <h3 class='heading'>Saved Playlists</h3>\n            <ul>\n                {playlists?.map((pl) => (\n                    <li>\n                        {pl}\n                    </li>\n                ))}\n            </ul>\n            \n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}