{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Track from \"./Track\";\nimport './Playlist.css';\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist(props) {\n  _s();\n  const {\n    playlist,\n    removeFromPlaylist,\n    token\n  } = props;\n  const [playlistName, setPlayListName] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const uriArray = [];\n  let playlistId = 'hello';\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (playlistName === '') {\n      alert('Must have a playlist name!');\n    } else if (playlist.length === 0) {\n      alert('No tracks in playlist');\n    } else if (!token) {\n      alert('You need to be logged in to upload playlists to Spotify');\n    } else {\n      //get user id\n      const responseUserId = await axios.get('https://api.spotify.com/v1/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const USER_ID = responseUserId.data.id;\n\n      //Upload playlist to Spotify\n      await axios({\n        method: 'post',\n        url: `https://api.spotify.com/v1/users/${USER_ID}/playlists`,\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        data: {\n          'name': `${playlistName}`,\n          'description': 'Playlist created with JAMMMING app',\n          'public': false\n        }\n      }).then(async function (response) {\n        playlistId = response.data.id;\n        console.log(playlistId);\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n\n      //Get track uris\n      console.log(playlistId);\n      const trackPostUrl = `https://api.spotify.com/v1/users/${USER_ID}/playlists/${playlistId}/tracks`;\n      console.log(trackPostUrl);\n      for (let i = 0; i < playlist.length; i++) {\n        uriArray.push(playlist[i].uri);\n      }\n      const uriToPost = JSON.stringify(uriArray);\n      console.log(uriToPost);\n      //Post uris to playlist\n      axios.post(`${trackPostUrl}`, {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }, {\n        data: {\n          \"uris\": `${JSON.stringify(uriArray)}`,\n          \"postition\": 0\n        }\n      }).then(function (response) {\n        console.log(response);\n        //reset\n        alert(`Upload ${playlistName} successful`);\n        setPlaylists(playlists => [...playlists, playlistName]);\n        setPlayListName('');\n        playlist.splice(0);\n      }).catch(function (error) {\n        if (error.response) {\n          console.log(error.response);\n        } else if (error.request) {\n          console.log(error.request);\n        } else if (error.message) {\n          console.log(error.message);\n        } else {\n          console.log('Good luck');\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"heading\",\n        onChange: e => setPlayListName(e.target.value),\n        value: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist === null || playlist === void 0 ? void 0 : playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          trackIsInPlaylist: true,\n          track: track,\n          removeFromPlaylist: () => {\n            removeFromPlaylist(track);\n          }\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"heading\",\n        type: \"submit\",\n        children: \"Upload My Jammms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading\",\n      children: \"Saved Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists === null || playlists === void 0 ? void 0 : playlists.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Playlist, \"wnBSdSZ6qdQWzI4gW4KiufbuhN0=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","axios","Track","json","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","props","_s","playlist","removeFromPlaylist","token","playlistName","setPlayListName","playlists","setPlaylists","uriArray","playlistId","handleSubmit","e","preventDefault","alert","length","responseUserId","get","headers","Authorization","USER_ID","data","id","method","url","then","response","console","log","catch","error","trackPostUrl","i","push","uri","uriToPost","JSON","stringify","post","splice","request","message","children","onSubmit","className","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","track","trackIsInPlaylist","type","pl","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport Track from \"./Track\";\nimport './Playlist.css'\nimport { json } from \"react-router-dom\";\n\nfunction Playlist(props) {\n    const {playlist, removeFromPlaylist, token} = props;\n\n    const [playlistName, setPlayListName] = useState('')\n    const [playlists, setPlaylists] = useState([])\n    const uriArray = [];\n    let playlistId = 'hello'\n\n    \n    async function handleSubmit(e) {\n        e.preventDefault();\n        if(playlistName === ''){\n            alert('Must have a playlist name!')\n        }\n        else if(playlist.length === 0){\n            alert('No tracks in playlist')\n        }\n        else if(!token){\n            alert('You need to be logged in to upload playlists to Spotify')\n        }\n        else{\n            //get user id\n            const responseUserId = await axios.get ('https://api.spotify.com/v1/me', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            const USER_ID = responseUserId.data.id;\n\n            //Upload playlist to Spotify\n            await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/users/${USER_ID}/playlists`,\n                headers: {'Authorization': `Bearer ${token}`},\n                data: {\n                    'name': `${playlistName}`,\n                    'description': 'Playlist created with JAMMMING app',\n                    'public': false\n                }\n            })\n            .then(async function (response) {\n                playlistId = response.data.id;\n                console.log(playlistId)\n            })\n            .catch(function (error) {\n                console.log(error);\n                alert(error)\n            });\n\n            //Get track uris\n            console.log(playlistId)\n            const trackPostUrl = `https://api.spotify.com/v1/users/${USER_ID}/playlists/${playlistId}/tracks`\n            console.log(trackPostUrl)\n            for (let i = 0; i < playlist.length; i++){\n                uriArray.push(playlist[i].uri)\n            }\n            const uriToPost = JSON.stringify(uriArray);\n            console.log(uriToPost);\n            //Post uris to playlist\n            axios.post(`${trackPostUrl}`,{\n                headers: {\"Authorization\": `Bearer ${token}`}\n            },{\n                data: {\n                    \"uris\": `${JSON.stringify(uriArray)}`, \"postition\": 0\n                }\n            })\n            .then(function (response) {\n                console.log(response)  \n                //reset\n                alert(`Upload ${playlistName} successful`)\n                setPlaylists(playlists => [...playlists, playlistName])\n                setPlayListName('')\n                playlist.splice(0)\n            })\n            .catch(function (error) {\n                if(error.response){\n                    console.log(error.response)\n                }\n                else if(error.request){\n                    console.log(error.request)\n                }\n                else if(error.message){\n                    console.log(error.message)\n                }\n                else{\n                    console.log('Good luck')\n                }\n            })\n        }\n    }\n\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input \n                    className='heading'\n                    onChange={(e) => setPlayListName(e.target.value)}\n                    value={playlistName}\n                />\n                <ul>\n                    {playlist?.map((track) => (\n                        <Track\n                            trackIsInPlaylist = {true}\n                            key={track.id}\n                            track={track}\n                            removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        />\n                    ))}\n                </ul>\n                <button className='heading' type=\"submit\">\n                    Upload My Jammms!\n                </button>\n            </form>\n            {/*add functionality to be able to change playlist names*/}\n            <h3 className='heading'>Saved Playlists</h3>\n            <ul>\n                {playlists?.map((pl) => (\n                    <li>\n                        {pl}\n                    </li>\n                ))}\n            </ul>\n            \n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}