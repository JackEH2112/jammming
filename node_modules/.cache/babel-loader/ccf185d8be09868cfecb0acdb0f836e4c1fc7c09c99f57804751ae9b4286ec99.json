{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tracklist() {\n  _s();\n  const [tracklist, setTracklist] = useState([{\n    'name': 'Something For Nothing',\n    'artist': 'Rush',\n    'album': '2112',\n    /*'id' : '0', Replace me with .utilities generate function when written*/\n    'playlist': 'false'\n  }]);\n  const [playlist, setPlaylist] = useState([]);\n  const addToPlaylist = track => {\n    if (track.playlist) {\n      alert(`{track.name} is already in your playlist`);\n    } else {\n      setPlaylist(playlist => [...playlist, track]);\n      track.playlist = true;\n    }\n  };\n  const removeFromPlaylist = trackToRemove => {\n    setPlaylist(playlist => playlist.filter(track => track.id !== trackToRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tracklist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        addToPlaylist: addToPlaylist\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        removeFromPlaylist: removeFromPlaylist\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Tracklist, \"7e0x1DIj1LeSZgE+vHIRkWdfBK0=\");\n_c = Tracklist;\nexport default Tracklist;\nvar _c;\n$RefreshReg$(_c, \"Tracklist\");","map":{"version":3,"names":["React","useState","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Tracklist","_s","tracklist","setTracklist","playlist","setPlaylist","addToPlaylist","track","alert","removeFromPlaylist","trackToRemove","filter","id","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\n\nfunction Tracklist() {\n\n    const [tracklist, setTracklist] = useState([{\n        'name' : 'Something For Nothing',\n        'artist' : 'Rush', \n        'album' : '2112',\n        /*'id' : '0', Replace me with .utilities generate function when written*/\n        'playlist' : 'false' \n    }]);\n\n    const [playlist, setPlaylist] = useState([]);\n\n    const addToPlaylist = (track) => {\n        if(track.playlist){\n            alert(`{track.name} is already in your playlist`);\n        }\n        else{\n            \n            setPlaylist(playlist => [...playlist, track])\n            track.playlist = true;\n        }\n    }\n\n    const removeFromPlaylist = (trackToRemove) => {\n        setPlaylist((playlist) => playlist.filter((track) => track.id !== trackToRemove))\n    }\n\n    return (\n        <>\n            <ul>\n                {tracklist.map((track) => (\n                    <Track \n                        key={track.id}\n                        track={track}\n                        addToPlaylist={addToPlaylist}\n                         />\n                )\n                )}\n            </ul>\n            <ul>\n                {playlist.map((track) => (\n                    <Track\n                        key={track.id}\n                        track={track}\n                        \n                        removeFromPlaylist={removeFromPlaylist} />\n                )\n                )}\n            </ul>\n        </>\n\n    )\n}\n\nexport default Tracklist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;IACxC,MAAM,EAAG,uBAAuB;IAChC,QAAQ,EAAG,MAAM;IACjB,OAAO,EAAG,MAAM;IAChB;IACA,UAAU,EAAG;EACjB,CAAC,CAAC,CAAC;EAEH,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC7B,IAAGA,KAAK,CAACH,QAAQ,EAAC;MACdI,KAAK,CAAE,0CAAyC,CAAC;IACrD,CAAC,MACG;MAEAH,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEG,KAAK,CAAC,CAAC;MAC7CA,KAAK,CAACH,QAAQ,GAAG,IAAI;IACzB;EACJ,CAAC;EAED,MAAMK,kBAAkB,GAAIC,aAAa,IAAK;IAC1CL,WAAW,CAAED,QAAQ,IAAKA,QAAQ,CAACO,MAAM,CAAEJ,KAAK,IAAKA,KAAK,CAACK,EAAE,KAAKF,aAAa,CAAC,CAAC;EACrF,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EACKX,SAAS,CAACY,GAAG,CAAEP,KAAK,iBACjBV,OAAA,CAACF,KAAK;QAEFY,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA;MAAc,GAFxBC,KAAK,CAACK,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CAEV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACLrB,OAAA;MAAAgB,QAAA,EACKT,QAAQ,CAACU,GAAG,CAAEP,KAAK,iBAChBV,OAAA,CAACF,KAAK;QAEFY,KAAK,EAAEA,KAAM;QAEbE,kBAAkB,EAAEA;MAAmB,GAHlCF,KAAK,CAACK,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG4B,CAEjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAGX;AAACjB,EAAA,CApDQD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAsDlB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}