{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  playlistArray\n}) {\n  const arrayPlaylistItems = playlistArray.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: song.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: song.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: song.album\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\"\n      /*onClick={updatePlaylist}*/,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, song.title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: arrayPlaylistItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"Save to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Playlist;\nfunction SearchResultsMock() {\n  _s();\n  const [playlistArray, setPlaylistArray] = useState([]);\n\n  /*function updatePlaylist() {\n      setPlaylistArray(\n          [\n              ...playlistArray,\n              {id: nextId++,}\n          ]\n      )\n      return (playlistArray);\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Playlist, {\n      playlistArray: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SearchResultsMock, \"errODkd15Qy9L69FhyNMA0ylyUM=\");\n_c2 = SearchResultsMock;\nexport default Playlist;\nvar _c, _c2;\n$RefreshReg$(_c, \"Playlist\");\n$RefreshReg$(_c2, \"SearchResultsMock\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","playlistArray","arrayPlaylistItems","map","song","children","title","fileName","_jsxFileName","lineNumber","columnNumber","artist","album","type","_c","SearchResultsMock","_s","setPlaylistArray","_c2","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\n\n\nfunction Playlist({playlistArray}) {\n\n    \n\n\n\n    const arrayPlaylistItems = playlistArray.map(song=>\n        <li key={song.title}>\n            <p>{song.title}</p>\n            <p>{song.artist}</p>\n            <p>{song.album}</p>\n            <button \n                type='button'\n                /*onClick={updatePlaylist}*/\n            >-</button>\n        </li>\n    )\n\n\n    return(\n        <>\n            <h2>Playlist</h2>\n            <ul>\n                {arrayPlaylistItems}\n            </ul>\n            <button type=\"button\">Save to Spotify</button>\n        </>\n\n    )\n}\n\nfunction SearchResultsMock() {\n\n    const [playlistArray, setPlaylistArray] = useState([]);\n\n    /*function updatePlaylist() {\n        setPlaylistArray(\n            [\n                ...playlistArray,\n                {id: nextId++,}\n            ]\n        )\n        return (playlistArray);\n    }*/\n\n    return(\n        <>\n            <Playlist playlistArray />\n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,SAASC,QAAQA,CAAC;EAACC;AAAa,CAAC,EAAE;EAM/B,MAAMC,kBAAkB,GAAGD,aAAa,CAACE,GAAG,CAACC,IAAI,iBAC7CP,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAID,IAAI,CAACE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MAAAQ,QAAA,EAAID,IAAI,CAACO;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBb,OAAA;MAAAQ,QAAA,EAAID,IAAI,CAACQ;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MACIgB,IAAI,EAAC;MACL;MAAAR,QAAA,EACH;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,GAPNN,IAAI,CAACE,KAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQf,CACR,CAAC;EAGD,oBACIb,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAAQ,QAAA,EACKH;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACLb,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAChD,CAAC;AAGX;AAACI,EAAA,GA7BQd,QAAQ;AA+BjB,SAASe,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAEzB,MAAM,CAACf,aAAa,EAAEgB,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIE,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA,CAACG,QAAQ;MAACC,aAAa;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC5B,CAAC;AAEX;AAACM,EAAA,CAnBQD,iBAAiB;AAAAG,GAAA,GAAjBH,iBAAiB;AAqB1B,eAAef,QAAQ;AAAC,IAAAc,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}