{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tracklist from './Tracklist';\nimport Playlist from './Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SearchResults(props) {\n  _s();\n  const {\n    searchResults\n  } = props;\n  console.log(searchResults);\n  console.log(searchResults === null || searchResults === void 0 ? void 0 : searchResults.data.tracks.items);\n  const renderTrack = () => {\n    return searchResults.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: track.name\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this));\n  };\n  const [playlist, setPlaylist] = useState([]);\n  const addToPlaylist = track => {\n    let playlistChecker = track.songName;\n    playlist.find(track => track.songName === playlistChecker);\n    if (playlist.find(track => track.songName === playlistChecker)) {\n      alert(track.songName + ' is already in playlist!');\n    } else {\n      let newId = track.id + 10; /*Replace me with .utilities generate function when written*/\n      const newTrack = {\n        songName: track.songName,\n        artist: track.artist,\n        album: track.album,\n        id: newId,\n        playlist: true\n      };\n      setPlaylist(playlist => [...playlist, newTrack]);\n    }\n  };\n  const removeFromPlaylist = trackToRemove => {\n    setPlaylist(playlist => playlist.filter(track => track.id !== trackToRemove.id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), renderTrack(), /*#__PURE__*/_jsxDEV(Tracklist, {\n        searchResults: searchResults,\n        addToPlaylist: addToPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlist: playlist,\n        removeFromPlaylist: removeFromPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SearchResults, \"rT6HjQv9hQ99hqLE+XhQR4fxbeY=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","Tracklist","Playlist","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchResults","props","_s","searchResults","console","log","data","tracks","items","renderTrack","map","track","children","name","id","fileName","_jsxFileName","lineNumber","columnNumber","playlist","setPlaylist","addToPlaylist","playlistChecker","songName","find","alert","newId","newTrack","artist","album","removeFromPlaylist","trackToRemove","filter","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/SearchResults.js"],"sourcesContent":["import React, {useState} from 'react'\nimport Tracklist from './Tracklist';\nimport Playlist from './Playlist';\n\nfunction SearchResults(props) {\n    const {searchResults} = props;\n    console.log(searchResults)\n    console.log(searchResults?.data.tracks.items)\n\n    \n    const renderTrack = () => {\n        return searchResults.map(track => (\n            <div key={(track.id)}>\n                {track.name}\n            </div>\n        ))\n    }\n\n    const [playlist, setPlaylist] = useState([]);\n\n    const addToPlaylist = (track) => {\n        let playlistChecker = track.songName;\n        playlist.find((track) => track.songName === playlistChecker)\n        if(playlist.find((track) => track.songName === playlistChecker)){\n            alert(track.songName + ' is already in playlist!')\n        }\n        else{\n            let newId = track.id+10; /*Replace me with .utilities generate function when written*/\n            const newTrack = {\n                songName: track.songName,\n                artist: track.artist,\n                album: track.album,\n                id: newId,\n                playlist: true\n            }\n            setPlaylist(playlist => [...playlist, newTrack])\n        }\n    }\n    const removeFromPlaylist = (trackToRemove) => {\n        setPlaylist((playlist) => \n            playlist.filter((track) => track.id !== trackToRemove.id))\n    }\n\n    return (\n        <>\n            <div>\n                <h3>Search Results</h3>\n                {renderTrack()}\n                <Tracklist \n                    searchResults={searchResults}\n                    addToPlaylist={addToPlaylist}\n                />\n            </div>\n            <div>\n                <h3>Playlist</h3>\n                <Playlist\n                    playlist={playlist}\n                    removeFromPlaylist={removeFromPlaylist}\n                />\n            </div>\n            \n        </>\n    )\n}\n\nexport default SearchResults;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}