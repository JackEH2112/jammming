{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport { searchResultsForTracklist as searchResults } from \"./SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tracklist() {\n  _s();\n  const [tracklist, setTracklist] = useState([]);\n  const [playlist, setPlaylist] = useState([]);\n  const addToPlaylist = track => {\n    let playlistChecker = track.songName;\n    playlist.find(track => track.songName === playlistChecker);\n    if (playlist.find(track => track.songName === playlistChecker)) {\n      /*alert(track.songName + ' is already in playlist!')*/\n    } else {\n      /*alert('Starting new track for playlist')*/\n      let newId = track.id + 10; /*Replace me with .utilities generate function when written*/\n      const newTrack = {\n        songName: track.songName,\n        artist: track.artist,\n        album: track.album,\n        id: newId,\n        playlist: true\n      };\n      setPlaylist(playlist => [...playlist, newTrack]);\n    }\n  };\n  const removeFromPlaylist = trackToRemove => {\n    console.log('I am being sent here');\n    console.log(trackToRemove.id);\n    setPlaylist(playlist => playlist.filter(track => track.id !== trackToRemove.id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        addToPlaylist: () => {\n          addToPlaylist(track);\n        },\n        playlist: playlist\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        removeFromPlaylist: () => {\n          removeFromPlaylist(track);\n        },\n        playlist: playlist\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Tracklist, \"+mYC/gceiIvWPk5CiDyEDw4zQ4A=\");\n_c = Tracklist;\nexport default Tracklist;\nvar _c;\n$RefreshReg$(_c, \"Tracklist\");","map":{"version":3,"names":["React","useState","Track","searchResultsForTracklist","searchResults","jsxDEV","_jsxDEV","Fragment","_Fragment","Tracklist","_s","tracklist","setTracklist","playlist","setPlaylist","addToPlaylist","track","playlistChecker","songName","find","newId","id","newTrack","artist","album","removeFromPlaylist","trackToRemove","console","log","filter","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\nimport {searchResultsForTracklist as searchResults} from \"./SearchResults\";\n\n\n\nfunction Tracklist() {\n\n    const [tracklist, setTracklist] = useState([]);\n\n    const [playlist, setPlaylist] = useState([]);\n\n    const addToPlaylist = (track) => {\n        let playlistChecker = track.songName;\n        playlist.find((track) => track.songName === playlistChecker)\n        if(playlist.find((track) => track.songName === playlistChecker)){\n            /*alert(track.songName + ' is already in playlist!')*/\n        }\n        else{\n            /*alert('Starting new track for playlist')*/\n            let newId = track.id+10; /*Replace me with .utilities generate function when written*/\n            const newTrack = {\n                songName: track.songName,\n                artist: track.artist,\n                album: track.album,\n                id: newId,\n                playlist: true\n            }\n            setPlaylist(playlist => [...playlist, newTrack])\n        }\n    }\n\n    const removeFromPlaylist = (trackToRemove) => {\n        console.log('I am being sent here')\n        console.log(trackToRemove.id)\n        setPlaylist((playlist) => \n            playlist.filter((track) => track.id !== trackToRemove.id))\n    }\n\n    return (\n        <>\n            <ul>\n                {searchResults.map((track) => (\n                    <Track \n                        key={track.id}\n                        track={track}\n                        addToPlaylist={() => {addToPlaylist(track)}}\n                        playlist={playlist}\n                         />\n                )\n                )}\n            </ul>\n            <ul>\n                {playlist.map((track) => (\n                    <Track\n                        key={track.id}\n                        track={track}\n                        removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        playlist={playlist}\n                        />\n                )\n                )}\n            </ul>\n        </>\n\n    )\n}\n\nexport default Tracklist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAAQC,yBAAyB,IAAIC,aAAa,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI3E,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,aAAa,GAAIC,KAAK,IAAK;IAC7B,IAAIC,eAAe,GAAGD,KAAK,CAACE,QAAQ;IACpCL,QAAQ,CAACM,IAAI,CAAEH,KAAK,IAAKA,KAAK,CAACE,QAAQ,KAAKD,eAAe,CAAC;IAC5D,IAAGJ,QAAQ,CAACM,IAAI,CAAEH,KAAK,IAAKA,KAAK,CAACE,QAAQ,KAAKD,eAAe,CAAC,EAAC;MAC5D;IAAA,CACH,MACG;MACA;MACA,IAAIG,KAAK,GAAGJ,KAAK,CAACK,EAAE,GAAC,EAAE,CAAC,CAAC;MACzB,MAAMC,QAAQ,GAAG;QACbJ,QAAQ,EAAEF,KAAK,CAACE,QAAQ;QACxBK,MAAM,EAAEP,KAAK,CAACO,MAAM;QACpBC,KAAK,EAAER,KAAK,CAACQ,KAAK;QAClBH,EAAE,EAAED,KAAK;QACTP,QAAQ,EAAE;MACd,CAAC;MACDC,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAES,QAAQ,CAAC,CAAC;IACpD;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAIC,aAAa,IAAK;IAC1CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAACF,aAAa,CAACL,EAAE,CAAC;IAC7BP,WAAW,CAAED,QAAQ,IACjBA,QAAQ,CAACgB,MAAM,CAAEb,KAAK,IAAKA,KAAK,CAACK,EAAE,KAAKK,aAAa,CAACL,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,oBACIf,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EACK1B,aAAa,CAAC2B,GAAG,CAAEf,KAAK,iBACrBV,OAAA,CAACJ,KAAK;QAEFc,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA,CAAA,KAAM;UAACA,aAAa,CAACC,KAAK,CAAC;QAAA,CAAE;QAC5CH,QAAQ,EAAEA;MAAS,GAHdG,KAAK,CAACK,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CAEV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACL7B,OAAA;MAAAwB,QAAA,EACKjB,QAAQ,CAACkB,GAAG,CAAEf,KAAK,iBAChBV,OAAA,CAACJ,KAAK;QAEFc,KAAK,EAAEA,KAAM;QACbS,kBAAkB,EAAEA,CAAA,KAAM;UAACA,kBAAkB,CAACT,KAAK,CAAC;QAAA,CAAE;QACtDH,QAAQ,EAAEA;MAAS,GAHdG,KAAK,CAACK,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CAET;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAGX;AAACzB,EAAA,CA5DQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA8DlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}