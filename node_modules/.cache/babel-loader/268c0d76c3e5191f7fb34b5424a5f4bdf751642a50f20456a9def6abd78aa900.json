{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tracklist() {\n  _s();\n  const [tracklist, setTracklist] = useState([{\n    'songName': 'Something For Nothing',\n    'artist': 'Rush',\n    'album': '2112',\n    'id': '0',\n    /*Replace me with .utilities generate function when written*/\n    'playlist': false\n  }]);\n  const [playlist, setPlaylist] = useState([]);\n  const addToPlaylist = track => {\n    if (track.playlist) {\n      alert(`{track.songName} is already in your playlist`);\n    } else {\n      alert('Starting new track for playlist');\n      console.log(track.songName);\n      const newTrack = {\n        songName: track.songName,\n        artist: track.artist,\n        album: track.album,\n        id: '1',\n        playlist: true\n      };\n      console.log(newTrack);\n      setPlaylist(playlist => [...playlist, newTrack]);\n    }\n  };\n\n  /*const removeFromPlaylist = (trackToRemove) => {\n      setPlaylist((playlist) => playlist.filter((track) => track.id !== trackToRemove))\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tracklist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        addToPlaylist: addToPlaylist\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        track: track\n\n        //removeFromPlaylist={removeFromPlaylist} \n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Tracklist, \"KJGWz9Od/9Wgt4OmOFXk1/VLq+g=\");\n_c = Tracklist;\nexport default Tracklist;\nvar _c;\n$RefreshReg$(_c, \"Tracklist\");","map":{"version":3,"names":["React","useState","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Tracklist","_s","tracklist","setTracklist","playlist","setPlaylist","addToPlaylist","track","alert","console","log","songName","newTrack","artist","album","id","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Tracklist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\n\nfunction Tracklist() {\n\n    const [tracklist, setTracklist] = useState([{\n        'songName' : 'Something For Nothing',\n        'artist' : 'Rush', \n        'album' : '2112',\n        'id' : '0', /*Replace me with .utilities generate function when written*/\n        'playlist' : false,\n    }]);\n\n    const [playlist, setPlaylist] = useState([]);\n\n    const addToPlaylist = (track) => {\n        if(track.playlist){\n            alert(`{track.songName} is already in your playlist`);\n        }\n        else{\n            alert('Starting new track for playlist')\n            console.log(track.songName)\n            const newTrack = {\n                songName: track.songName,\n                artist: track.artist,\n                album: track.album,\n                id: '1',\n                playlist: true\n            }\n            console.log(newTrack);\n            setPlaylist(playlist => [...playlist, newTrack])\n        }\n        \n    }\n\n    /*const removeFromPlaylist = (trackToRemove) => {\n        setPlaylist((playlist) => playlist.filter((track) => track.id !== trackToRemove))\n    }*/\n\n    return (\n        <>\n            <ul>\n                {tracklist.map((track) => (\n                    <Track \n                        key={track.id}\n                        track={track}\n                        addToPlaylist={addToPlaylist}\n                         />\n                )\n                )}\n            </ul>\n            <ul>\n                {playlist.map((track) => (\n                    <Track\n                        key={track.id}\n                        track={track}\n                        \n                        //removeFromPlaylist={removeFromPlaylist} \n                        />\n                )\n                )}\n            </ul>\n        </>\n\n    )\n}\n\nexport default Tracklist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;IACxC,UAAU,EAAG,uBAAuB;IACpC,QAAQ,EAAG,MAAM;IACjB,OAAO,EAAG,MAAM;IAChB,IAAI,EAAG,GAAG;IAAE;IACZ,UAAU,EAAG;EACjB,CAAC,CAAC,CAAC;EAEH,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC7B,IAAGA,KAAK,CAACH,QAAQ,EAAC;MACdI,KAAK,CAAE,8CAA6C,CAAC;IACzD,CAAC,MACG;MACAA,KAAK,CAAC,iCAAiC,CAAC;MACxCC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,QAAQ,CAAC;MAC3B,MAAMC,QAAQ,GAAG;QACbD,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;QACxBE,MAAM,EAAEN,KAAK,CAACM,MAAM;QACpBC,KAAK,EAAEP,KAAK,CAACO,KAAK;QAClBC,EAAE,EAAE,GAAG;QACPX,QAAQ,EAAE;MACd,CAAC;MACDK,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;MACrBP,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEQ,QAAQ,CAAC,CAAC;IACpD;EAEJ,CAAC;;EAED;AACJ;AACA;;EAEI,oBACIf,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EACKd,SAAS,CAACe,GAAG,CAAEV,KAAK,iBACjBV,OAAA,CAACF,KAAK;QAEFY,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA;MAAc,GAFxBC,KAAK,CAACQ,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CAEV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACLxB,OAAA;MAAAmB,QAAA,EACKZ,QAAQ,CAACa,GAAG,CAAEV,KAAK,iBAChBV,OAAA,CAACF,KAAK;QAEFY,KAAK,EAAEA;;QAEP;MAAA,GAHKA,KAAK,CAACQ,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CAET;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACP,CAAC;AAGX;AAACpB,EAAA,CA9DQD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAgElB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}