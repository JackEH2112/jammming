{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport './Playlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist(props) {\n  _s();\n  const {\n    playlist,\n    removeFromPlaylist,\n    token\n  } = props;\n  const [playlistName, setPlayListName] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const [newUriPlaylist, setNewUriPlaylist] = useState([]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (playlistName === '') {\n      alert('Must have a playlist name!');\n    } else if (playlist.length === 0) {\n      alert('No tracks in playlist');\n    } else if (!token) {\n      alert('You need to be logged in to upload playlists to Spotify');\n    } else {\n      //Save the new playlist\n      console.log(playlist.length);\n      setPlaylists(playlists => [...playlists, playlistName]);\n      for (let i = 0; i < playlist.length - 1; i++) {\n        //need function for taking song name and creating uri code - placeholder code\n        const playlistUri = playlist[i].name;\n        //add uri code to array for Spotify api\n        setNewUriPlaylist(newUriPlaylist => [...newUriPlaylist, playlistUri]);\n      }\n      alert(`Upload ${playlistName} successful`);\n      setPlayListName('');\n      playlist.splice(0);\n      console.log(playlist.length);\n      console.log(newUriPlaylist);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"heading\",\n        onChange: e => setPlayListName(e.target.value),\n        value: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist === null || playlist === void 0 ? void 0 : playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          trackIsInPlaylist: true,\n          track: track,\n          removeFromPlaylist: () => {\n            removeFromPlaylist(track);\n          }\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"heading\",\n        type: \"submit\",\n        children: \"Upload My Jammms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"heading\",\n      children: \"Saved Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: playlists === null || playlists === void 0 ? void 0 : playlists.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: newUriPlaylist === null || newUriPlaylist === void 0 ? void 0 : newUriPlaylist.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pl.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Playlist, \"6uVKxeAc/7OtC7bZaiydObPdfBM=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","props","_s","playlist","removeFromPlaylist","token","playlistName","setPlayListName","playlists","setPlaylists","newUriPlaylist","setNewUriPlaylist","handleSubmit","e","preventDefault","alert","length","console","log","i","playlistUri","name","splice","children","onSubmit","class","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","track","trackIsInPlaylist","id","type","pl","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\nimport './Playlist.css'\n\nfunction Playlist(props) {\n    const {playlist, removeFromPlaylist, token} = props;\n\n    const [playlistName, setPlayListName] = useState('')\n    const [playlists, setPlaylists] = useState([])\n    const [newUriPlaylist, setNewUriPlaylist] = useState([])\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        if(playlistName === ''){\n            alert('Must have a playlist name!')\n        }\n        else if(playlist.length === 0){\n            alert('No tracks in playlist')\n        }\n        else if(!token){\n            alert('You need to be logged in to upload playlists to Spotify')\n        }\n        else{\n            //Save the new playlist\n            console.log(playlist.length)\n            setPlaylists(playlists => [...playlists, playlistName])\n\n            for (let i = 0; i < playlist.length -1; i++){\n                //need function for taking song name and creating uri code - placeholder code\n                const playlistUri = playlist[i].name;\n                //add uri code to array for Spotify api\n                setNewUriPlaylist(newUriPlaylist => [...newUriPlaylist, playlistUri])\n            }\n            alert(`Upload ${playlistName} successful`)\n            setPlayListName('')\n            playlist.splice(0)\n            console.log(playlist.length)\n            console.log(newUriPlaylist)\n        }\n    }\n\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input \n                    class='heading'\n                    onChange={(e) => setPlayListName(e.target.value)}\n                    value={playlistName}\n                />\n                <ul>\n                    {playlist?.map((track) => (\n                        <Track\n                            trackIsInPlaylist = {true}\n                            key={track.id}\n                            track={track}\n                            removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        />\n                    ))}\n                </ul>\n                <button class='heading' type=\"submit\">\n                    Upload My Jammms!\n                </button>\n            </form>\n            {/*add functionality to be able to change playlist names*/}\n            <h3 class='heading'>Saved Playlists</h3>\n            <ul>\n                {playlists?.map((pl) => (\n                    <li>\n                        {pl}\n                    </li>\n                ))}\n            </ul>\n            <ul>\n                {newUriPlaylist?.map((pl) => (\n                    <li>\n                        {pl.track}\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}