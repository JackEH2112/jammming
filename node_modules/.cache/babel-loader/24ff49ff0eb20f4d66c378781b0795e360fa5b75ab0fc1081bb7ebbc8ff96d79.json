{"ast":null,"code":"var _jsxFileName = \"/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Track from \"./Track\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Playlist(props) {\n  _s();\n  const {\n    playlist,\n    removeFromPlaylist\n  } = props;\n  const [playlistName, setPlayListName] = useState('');\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (playlistName === '') {\n      alert('Must have a playlist name!');\n    } else if (playlist.length === 0) {\n      alert('No tracks in playlist');\n    } else {\n      alert(`Upload ${playlistName} successful`);\n      setPlayListName('');\n      playlist.splice(0);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setPlayListName(e.target.value),\n        value: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist === null || playlist === void 0 ? void 0 : playlist.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          track: track,\n          removeFromPlaylist: () => {\n            removeFromPlaylist(track);\n          }\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload My Jammms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Playlist, \"Plz1x6MV/jUamCZEzBhKrPBnJPw=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","Track","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","props","_s","playlist","removeFromPlaylist","playlistName","setPlayListName","handleSubmit","e","preventDefault","alert","length","splice","children","onSubmit","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","track","id","type","_c","$RefreshReg$"],"sources":["/Users/jackhughes/JackEH2112.github.io/CCProjects/jammming/src/Playlist.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Track from \"./Track\";\n\nfunction Playlist(props) {\n    const {playlist, removeFromPlaylist} = props;\n\n    const [playlistName, setPlayListName] = useState('')\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        if(playlistName === ''){\n            alert('Must have a playlist name!')\n        }\n        else if(playlist.length === 0){\n            alert('No tracks in playlist')\n        }\n        else{\n            alert(`Upload ${playlistName} successful`)\n            setPlayListName('')\n            playlist.splice(0)\n        }\n        \n    }\n\n\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <input \n                    onChange={(e) => setPlayListName(e.target.value)}\n                    value={playlistName}\n                />\n                <ul>\n                    {playlist?.map((track) => (\n                        <Track\n                            key={track.id}\n                            track={track}\n                            removeFromPlaylist={() => {removeFromPlaylist(track)}} \n                        />\n                    ))}\n                </ul>\n                <button type=\"submit\">\n                    Upload My Jammms!\n                </button>\n            </form>\n        </>\n    )\n}\n\nexport default Playlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM;IAACC,QAAQ;IAAEC;EAAkB,CAAC,GAAGH,KAAK;EAE5C,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAASa,YAAYA,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAGJ,YAAY,KAAK,EAAE,EAAC;MACnBK,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,MACI,IAAGP,QAAQ,CAACQ,MAAM,KAAK,CAAC,EAAC;MAC1BD,KAAK,CAAC,uBAAuB,CAAC;IAClC,CAAC,MACG;MACAA,KAAK,CAAE,UAASL,YAAa,aAAY,CAAC;MAC1CC,eAAe,CAAC,EAAE,CAAC;MACnBH,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC;IACtB;EAEJ;EAGA,oBACIf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACIhB,OAAA;MAAMiB,QAAQ,EAAEP,YAAa;MAAAM,QAAA,gBACzBhB,OAAA;QACIkB,QAAQ,EAAGP,CAAC,IAAKF,eAAe,CAACE,CAAC,CAACQ,MAAM,CAACC,KAAK,CAAE;QACjDA,KAAK,EAAEZ;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFxB,OAAA;QAAAgB,QAAA,EACKV,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmB,GAAG,CAAEC,KAAK,iBACjB1B,OAAA,CAACF,KAAK;UAEF4B,KAAK,EAAEA,KAAM;UACbnB,kBAAkB,EAAEA,CAAA,KAAM;YAACA,kBAAkB,CAACmB,KAAK,CAAC;UAAA;QAAE,GAFjDA,KAAK,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGhB,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLxB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAEtB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACT,CAAC;AAEX;AAACnB,EAAA,CA5CQF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}